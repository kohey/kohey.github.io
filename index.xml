<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>かわそんの掃き溜め</title>
    <link>https://kohey.github.io/</link>
    <description>Recent content on かわそんの掃き溜め</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 16 Oct 2021 20:54:49 +0900</lastBuildDate><atom:link href="https://kohey.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Dockerでmongo環境を構築し、本番データを投入して監視してみる</title>
      <link>https://kohey.github.io/post/2021-10-16/</link>
      <pubDate>Sat, 16 Oct 2021 20:54:49 +0900</pubDate>
      
      <guid>https://kohey.github.io/post/2021-10-16/</guid>
      <description>こんにちは、かわそんです。
本番データに対してローカルでコマンドを当てて、いろんなデータをとってみたい。
でも、ローカル環境は汚したくないので、あくまでもDocker上で構築したい。
この方法を解説します。
手順  docker-compose で mongo と mongo-express を導入 コンテナにローカルからファイルを転送 コンテナに入る mongo shell に入れることを確認 mongorestore する freeMonitoringを有効にする 発行されたuniq な url でモニタリングしつつ、mem でメモリ差分を取得  1. docker-compose で mongo と mongo-express を導入 docker-compose でサクッと構築。
こんな感じ。 外部に公開しないので、env周りは適当ですが、何かしらの設定は必須です。 設定しないと手順 4 or 5 で unauthorized と怒られます。
version: &amp;#39;3&amp;#39; services: mongo: image: mongo:latest restart: always environment: MONGO_INITDB_ROOT_USERNAME: root MONGO_INITDB_ROOT_PASSWORD: password ports: - 27017:27017 volumes: - mongo:/data/db - mongo:/data/configdb mongo-express: image: mongo-express restart: always ports: - 8081:8081 environment: ME_CONFIG_MONGODB_SERVER: mongo ME_CONFIG_MONGODB_PORT: 27017 ME_CONFIG_MONGODB_ADMINUSERNAME: root ME_CONFIG_MONGODB_ADMINPASSWORD: password depends_on: - mongo volumes: mongo: インデントなどは調整してください。 問題なければ docker-compose up -d しておきます。</description>
    </item>
    
    <item>
      <title>Vscodeをインストールしたら最初にやること</title>
      <link>https://kohey.github.io/post/vscode%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%9F%E3%82%89%E6%9C%80%E5%88%9D%E3%81%AB%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8/</link>
      <pubDate>Thu, 23 Sep 2021 16:27:59 +0900</pubDate>
      
      <guid>https://kohey.github.io/post/vscode%E3%82%92%E3%82%A4%E3%83%B3%E3%82%B9%E3%83%88%E3%83%BC%E3%83%AB%E3%81%97%E3%81%9F%E3%82%89%E6%9C%80%E5%88%9D%E3%81%AB%E3%82%84%E3%82%8B%E3%81%93%E3%81%A8/</guid>
      <description>&lt;p&gt;VSCodeをインストールしたら最初に入れておくべきプラグインです。&lt;br&gt;
これがないと仕事にならない&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>【sinon.js】mockとstubの使い分け.md</title>
      <link>https://kohey.github.io/post/mock%E3%81%A8stub%E3%81%AE%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91/</link>
      <pubDate>Sun, 12 Sep 2021 23:24:42 +0900</pubDate>
      
      <guid>https://kohey.github.io/post/mock%E3%81%A8stub%E3%81%AE%E4%BD%BF%E3%81%84%E5%88%86%E3%81%91/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/KKohey4&#34;&gt;かわそん&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;sinon.jsを使っていて、mockと stub の区別がつかなかったので、個人的基準を共有します&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>RDSの歴史・immutability・validationについて</title>
      <link>https://kohey.github.io/post/ddd%E3%81%A8rdb%E3%81%AE%E8%B7%9D%E9%9B%A2/</link>
      <pubDate>Sun, 12 Sep 2021 17:52:28 +0900</pubDate>
      
      <guid>https://kohey.github.io/post/ddd%E3%81%A8rdb%E3%81%AE%E8%B7%9D%E9%9B%A2/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/KKohey4&#34;&gt;かわそん&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;texta.fm#1・2から学んだことをまとめます。
RDBが勢力伸ばした理由、immutability、validationについて。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>2021 09 12 M1マシンでNuxtのビルドが遅い</title>
      <link>https://kohey.github.io/post/2021-09-12-m1%E3%83%9E%E3%82%B7%E3%83%B3%E3%81%A7nuxt%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%81%8C%E9%81%85%E3%81%84/</link>
      <pubDate>Sun, 12 Sep 2021 17:08:35 +0900</pubDate>
      
      <guid>https://kohey.github.io/post/2021-09-12-m1%E3%83%9E%E3%82%B7%E3%83%B3%E3%81%A7nuxt%E3%81%AE%E3%83%93%E3%83%AB%E3%83%89%E3%81%8C%E9%81%85%E3%81%84/</guid>
      <description>&lt;p&gt;こんにちは、&lt;a href=&#34;https://twitter.com/KKohey4&#34;&gt;かわそん&lt;/a&gt;です。&lt;/p&gt;
&lt;p&gt;Intel Macで通常通りビルドできていたNuxtプロジェクトをM1マシンに移したとき、ビルドに2時間くらいかかるという現象が起きる場合の対処法です。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>最初の記事</title>
      <link>https://kohey.github.io/post/2021-09-11-create-blog-1/</link>
      <pubDate>Sat, 11 Sep 2021 18:43:16 +0900</pubDate>
      
      <guid>https://kohey.github.io/post/2021-09-11-create-blog-1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>自己紹介</title>
      <link>https://kohey.github.io/page/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://kohey.github.io/page/about/</guid>
      <description>21年新卒の、渋谷で働くWeb系エンジニアです。
業務では主にnodeを書いています。
開発で得られた知見や、エラーとの格闘日々を記録します。
skill 仕事で使ったことがあるもの  Ruby(Rails) Golang(chi・echo) Node(mongoose・mongo) Vue(Nuxt) Kubernetes  趣味レベル  Python swift GCP・AWS  </description>
    </item>
    
  </channel>
</rss>
